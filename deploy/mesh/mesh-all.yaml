---
apiVersion: v1
kind: Namespace
metadata:
  name: mesh-node-ws
  labels:
    mesh: mesh-node-ws
    gateway: ingress-gw
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: mesh-node-ws
spec:
  namespaceSelector:
    matchLabels:
      mesh: mesh-node-ws
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: ingress-gw
  namespace: mesh-node-ws
spec:
  namespaceSelector:
    matchLabels:
      gateway: ingress-gw
  podSelector:
    matchLabels:
      app: ingress-gw
  listeners:
    - portMapping:
        port: 80
        protocol: http
  logging:
    accessLog:
      file:
        path: /dev/stdout
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: gateway-route-paths
  namespace: mesh-node-ws
spec:
  httpRoute:
    match:
      prefix: "/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: node-ws
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  namespace: mesh-node-ws
  name: mesh-node-ws
spec:
  listeners:
    - portMapping:
        port: 80
        protocol: http
  routes:
    - name: mesh-node-ws-route1
      priority: 100
      httpRoute:
        match:
          prefix: *
        action:
          weightedTargets:
            - virtualNodeRef:
                name: mesh-node-ws
              weight: 1
        timeout:
          perRequest:
           - value: 10
             unit: s
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: mesh-node-ws
  namespace: mesh-node-ws
spec:
  awsName: mesh-node-ws.mesh-node-ws.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: mesh-node-ws
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: mesh-node-ws
  namespace: mesh-node-ws
spec:
  podSelector:
    matchLabels:
      app: mesh-node-ws
  listeners:
    - portMapping:
        port: 80
        protocol: http
      healthCheck:
        protocol: http
        path: '/ping'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  serviceDiscovery:
    dns:
      hostname: mesh-node-ws.mesh-node-ws.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mesh-node-ws
  namespace: mesh-node-ws
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mesh-node-ws
  template:
    metadata:
      labels:
        app: mesh-node-ws
    spec:
      containers:
        - name: node-ws
          image: node-ws:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mesh-node-ws
  namespace: mesh-node-ws
spec:
  ports:
    - port: 80
      name: http
  selector:
    app: mesh-node-ws
